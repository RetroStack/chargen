{"version":3,"file":"a2f4bf4595c61a9ae8dc545f78d48a970241e3e2-fc6bbc4a224d6317ca1b.js","mappings":"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","sources":["webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useCompound/useCompoundItem.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useCompound/useCompoundParent.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useList/ListContext.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useList/listActions.types.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useList/listReducer.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/utils/useControllableReducer.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/utils/useTextNavigation.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useList/useList.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/useList/useListItem.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/utils/areArraysEqual.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/base/utils/combineHooksSlotProps.js","webpack://trs-80-model-1-debugging/./node_modules/@mui/joy/FormControl/FormControlContext.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { CompoundComponentContext } from './useCompoundParent';\n/**\n * Registers a child component with the parent component.\n *\n * @param id A unique key for the child component. If the `id` is `undefined`, the registration logic will not run (this can sometimes be the case during SSR).\n *   This can be either a value, or a function that generates a value based on already registered siblings' ids.\n *   If a function, it's called with the set of the ids of all the items that have already been registered.\n *   Return `existingKeys.size` if you want to use the index of the new item as the id.\n * @param itemMetadata Arbitrary metadata to pass to the parent component. This should be a stable reference (e.g. a memoized object), to avoid unnecessary re-registrations.\n *\n * @ignore - internal hook.\n */\nexport function useCompoundItem(id, itemMetadata) {\n  const context = React.useContext(CompoundComponentContext);\n  if (context === null) {\n    throw new Error('useCompoundItem must be used within a useCompoundParent');\n  }\n  const {\n    registerItem\n  } = context;\n  const [registeredId, setRegisteredId] = React.useState(typeof id === 'function' ? undefined : id);\n  useEnhancedEffect(() => {\n    const {\n      id: returnedId,\n      deregister\n    } = registerItem(id, itemMetadata);\n    setRegisteredId(returnedId);\n    return deregister;\n  }, [registerItem, itemMetadata, id]);\n  return {\n    id: registeredId,\n    index: registeredId !== undefined ? context.getItemIndex(registeredId) : -1,\n    totalItemCount: context.totalSubitemCount\n  };\n}","'use client';\n\nimport * as React from 'react';\nexport const CompoundComponentContext = /*#__PURE__*/React.createContext(null);\nCompoundComponentContext.displayName = 'CompoundComponentContext';\n/**\n * Sorts the subitems by their position in the DOM.\n */\nfunction sortSubitems(subitems) {\n  const subitemsArray = Array.from(subitems.keys()).map(key => {\n    const subitem = subitems.get(key);\n    return {\n      key,\n      subitem\n    };\n  });\n  subitemsArray.sort((a, b) => {\n    const aNode = a.subitem.ref.current;\n    const bNode = b.subitem.ref.current;\n    if (aNode === null || bNode === null || aNode === bNode) {\n      return 0;\n    }\n\n    // eslint-disable-next-line no-bitwise\n    return aNode.compareDocumentPosition(bNode) & Node.DOCUMENT_POSITION_PRECEDING ? 1 : -1;\n  });\n  return new Map(subitemsArray.map(item => [item.key, item.subitem]));\n}\n\n/**\n * Provides a way for a component to know about its children.\n *\n * Child components register themselves with the `useCompoundItem` hook, passing in arbitrary metadata to the parent.\n *\n * This is a more powerful altervantive to `children` traversal, as child components don't have to be placed\n * directly inside the parent component. They can be anywhere in the tree (and even rendered by other components).\n *\n * The downside is that this doesn't work with SSR as it relies on the useEffect hook.\n *\n * @ignore - internal hook.\n */\nexport function useCompoundParent() {\n  const [subitems, setSubitems] = React.useState(new Map());\n  const subitemKeys = React.useRef(new Set());\n  const deregisterItem = React.useCallback(function deregisterItem(id) {\n    subitemKeys.current.delete(id);\n    setSubitems(previousState => {\n      const newState = new Map(previousState);\n      newState.delete(id);\n      return newState;\n    });\n  }, []);\n  const registerItem = React.useCallback(function registerItem(id, item) {\n    let providedOrGeneratedId;\n    if (typeof id === 'function') {\n      providedOrGeneratedId = id(subitemKeys.current);\n    } else {\n      providedOrGeneratedId = id;\n    }\n    subitemKeys.current.add(providedOrGeneratedId);\n    setSubitems(previousState => {\n      const newState = new Map(previousState);\n      newState.set(providedOrGeneratedId, item);\n      return newState;\n    });\n    return {\n      id: providedOrGeneratedId,\n      deregister: () => deregisterItem(providedOrGeneratedId)\n    };\n  }, [deregisterItem]);\n  const sortedSubitems = React.useMemo(() => sortSubitems(subitems), [subitems]);\n  const getItemIndex = React.useCallback(function getItemIndex(id) {\n    return Array.from(sortedSubitems.keys()).indexOf(id);\n  }, [sortedSubitems]);\n  const contextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount: subitems.size\n  }), [getItemIndex, registerItem, subitems.size]);\n  return {\n    contextValue,\n    subitems: sortedSubitems\n  };\n}","import * as React from 'react';\nexport const ListContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}","export const ListActionTypes = {\n  blur: 'list:blur',\n  focus: 'list:focus',\n  itemClick: 'list:itemClick',\n  itemHover: 'list:itemHover',\n  itemsChange: 'list:itemsChange',\n  keyDown: 'list:keyDown',\n  resetHighlight: 'list:resetHighlight',\n  highlightLast: 'list:highlightLast',\n  textNavigation: 'list:textNavigation',\n  clearSelection: 'list:clearSelection'\n};\n\n/**\n * A union of all standard actions that can be dispatched to the list reducer.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes } from './listActions.types';\n/**\n * Looks up the next valid item to highlight within the list.\n *\n * @param currentIndex The index of the start of the search.\n * @param lookupDirection Whether to look for the next or previous item.\n * @param items The array of items to search.\n * @param includeDisabledItems Whether to include disabled items in the search.\n * @param isItemDisabled A function that determines whether an item is disabled.\n * @param wrapAround Whether to wrap around the list when searching.\n * @returns The index of the next valid item to highlight or -1 if no valid item is found.\n */\nfunction findValidItemToHighlight(currentIndex, lookupDirection, items, includeDisabledItems, isItemDisabled, wrapAround) {\n  if (items.length === 0 || !includeDisabledItems && items.every((item, itemIndex) => isItemDisabled(item, itemIndex))) {\n    return -1;\n  }\n  let nextFocus = currentIndex;\n  for (;;) {\n    // No valid items found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === items.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = includeDisabledItems ? false : isItemDisabled(items[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + items.length) % items.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\n\n/**\n * Gets the next item to highlight based on the current highlighted item and the search direction.\n *\n * @param previouslyHighlightedValue The item from which to start the search for the next candidate.\n * @param offset The offset from the previously highlighted item to search for the next candidate or a special named value ('reset', 'start', 'end').\n * @param context The list action context.\n *\n * @returns The next item to highlight or null if no item is valid.\n */\nexport function moveHighlight(previouslyHighlightedValue, offset, context) {\n  var _items$nextIndex;\n  const {\n    items,\n    isItemDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    itemComparer,\n    focusManagement\n  } = context;\n\n  // TODO: make this configurable\n  // The always should be an item highlighted when focus is managed by the DOM\n  // so that it's accessible by the `tab` key.\n  const defaultHighlightedIndex = focusManagement === 'DOM' ? 0 : -1;\n  const maxIndex = items.length - 1;\n  const previouslyHighlightedIndex = previouslyHighlightedValue == null ? -1 : items.findIndex(item => itemComparer(item, previouslyHighlightedValue));\n  let nextIndexCandidate;\n  let lookupDirection;\n  let wrapAround = !disableListWrap;\n  switch (offset) {\n    case 'reset':\n      if (defaultHighlightedIndex === -1) {\n        return null;\n      }\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'start':\n      nextIndexCandidate = 0;\n      lookupDirection = 'next';\n      wrapAround = false;\n      break;\n    case 'end':\n      nextIndexCandidate = maxIndex;\n      lookupDirection = 'previous';\n      wrapAround = false;\n      break;\n    default:\n      {\n        const newIndex = previouslyHighlightedIndex + offset;\n        if (newIndex < 0) {\n          if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(offset) > 1) {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          } else {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          }\n        } else if (newIndex > maxIndex) {\n          if (!wrapAround || Math.abs(offset) > 1) {\n            nextIndexCandidate = maxIndex;\n            lookupDirection = 'previous';\n          } else {\n            nextIndexCandidate = 0;\n            lookupDirection = 'next';\n          }\n        } else {\n          nextIndexCandidate = newIndex;\n          lookupDirection = offset >= 0 ? 'next' : 'previous';\n        }\n      }\n  }\n  const nextIndex = findValidItemToHighlight(nextIndexCandidate, lookupDirection, items, disabledItemsFocusable, isItemDisabled, wrapAround);\n\n  // If there are no valid items to highlight, return the previously highlighted item (if it's still valid).\n  if (nextIndex === -1 && previouslyHighlightedValue !== null && !isItemDisabled(previouslyHighlightedValue, previouslyHighlightedIndex)) {\n    return previouslyHighlightedValue;\n  }\n  return (_items$nextIndex = items[nextIndex]) != null ? _items$nextIndex : null;\n}\n\n/**\n * Toggles the selection of an item.\n *\n * @param item Item to toggle.\n * @param selectedValues Already selected items.\n * @param selectionMode The number of items that can be simultanously selected.\n * @param itemComparer A custom item comparer function.\n *\n * @returns The new array of selected items.\n */\nexport function toggleSelection(item, selectedValues, selectionMode, itemComparer) {\n  if (selectionMode === 'none') {\n    return [];\n  }\n  if (selectionMode === 'single') {\n    // if the item to select has already been selected, return the original array\n    if (itemComparer(selectedValues[0], item)) {\n      return selectedValues;\n    }\n    return [item];\n  }\n\n  // The toggled item is selected; remove it from the selection.\n  if (selectedValues.some(sv => itemComparer(sv, item))) {\n    return selectedValues.filter(sv => !itemComparer(sv, item));\n  }\n\n  // The toggled item is not selected - add it to the selection.\n  return [...selectedValues, item];\n}\n\n/**\n * Handles item selection in a list.\n *\n * @param item - The item to be selected.\n * @param state - The current state of the list.\n * @param context - The context of the list action.\n * @returns The new state of the list after the item has been selected, or the original state if the item is disabled.\n */\nexport function handleItemSelection(item, state, context) {\n  const {\n    itemComparer,\n    isItemDisabled,\n    selectionMode,\n    items\n  } = context;\n  const {\n    selectedValues\n  } = state;\n  const itemIndex = items.findIndex(i => itemComparer(item, i));\n  if (isItemDisabled(item, itemIndex)) {\n    return state;\n  }\n\n  // if the item is already selected, remove it from the selection, otherwise add it\n  const newSelectedValues = toggleSelection(item, selectedValues, selectionMode, itemComparer);\n  return _extends({}, state, {\n    selectedValues: newSelectedValues,\n    highlightedValue: item\n  });\n}\nfunction handleKeyDown(key, state, context) {\n  const previouslySelectedValue = state.highlightedValue;\n  const {\n    orientation,\n    pageSize\n  } = context;\n  switch (key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'start', context)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 'end', context)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -pageSize, context)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, pageSize, context)\n      });\n    case 'ArrowUp':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, -1, context)\n      });\n    case 'ArrowDown':\n      if (orientation !== 'vertical') {\n        break;\n      }\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(previouslySelectedValue, 1, context)\n      });\n    case 'ArrowLeft':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? -1 : 1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'ArrowRight':\n      {\n        if (orientation === 'vertical') {\n          break;\n        }\n        const offset = orientation === 'horizontal-ltr' ? 1 : -1;\n        return _extends({}, state, {\n          highlightedValue: moveHighlight(previouslySelectedValue, offset, context)\n        });\n      }\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleItemSelection(state.highlightedValue, state, context);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state, context) {\n  if (context.focusManagement === 'DOM') {\n    return state;\n  }\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nfunction textCriteriaMatches(nextFocus, searchString, stringifyItem) {\n  var _stringifyItem;\n  const text = (_stringifyItem = stringifyItem(nextFocus)) == null ? void 0 : _stringifyItem.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make item not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n}\nfunction handleTextNavigation(state, searchString, context) {\n  const {\n    items,\n    isItemDisabled,\n    disabledItemsFocusable,\n    getItemAsString\n  } = context;\n  const startWithCurrentItem = searchString.length > 1;\n  let nextItem = startWithCurrentItem ? state.highlightedValue : moveHighlight(state.highlightedValue, 1, context);\n  for (let index = 0; index < items.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextItem || !startWithCurrentItem && state.highlightedValue === nextItem) {\n      return state;\n    }\n    if (textCriteriaMatches(nextItem, searchString, getItemAsString) && (!isItemDisabled(nextItem, items.indexOf(nextItem)) || disabledItemsFocusable)) {\n      // The nextItem is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextItem\n      });\n    }\n    // Move to the next element.\n    nextItem = moveHighlight(nextItem, 1, context);\n  }\n\n  // No item matches the text search criteria\n  return state;\n}\nfunction handleItemsChange(items, previousItems, state, context) {\n  var _state$selectedValues;\n  const {\n    itemComparer,\n    focusManagement\n  } = context;\n  let newHighlightedValue = null;\n  if (state.highlightedValue != null) {\n    var _items$find;\n    newHighlightedValue = (_items$find = items.find(item => itemComparer(item, state.highlightedValue))) != null ? _items$find : null;\n  } else if (focusManagement === 'DOM' && previousItems.length === 0) {\n    newHighlightedValue = moveHighlight(null, 'reset', context);\n  }\n\n  // exclude selected values that are no longer in the items list\n  const selectedValues = (_state$selectedValues = state.selectedValues) != null ? _state$selectedValues : [];\n  const newSelectedValues = selectedValues.filter(selectedValue => items.some(item => itemComparer(item, selectedValue)));\n  return _extends({}, state, {\n    highlightedValue: newHighlightedValue,\n    selectedValues: newSelectedValues\n  });\n}\nfunction handleResetHighlight(state, context) {\n  return _extends({}, state, {\n    highlightedValue: moveHighlight(null, 'reset', context)\n  });\n}\nfunction handleHighlightLast(state, context) {\n  return _extends({}, state, {\n    highlightedValue: moveHighlight(null, 'end', context)\n  });\n}\nfunction handleClearSelection(state, context) {\n  return _extends({}, state, {\n    selectedValues: [],\n    highlightedValue: moveHighlight(null, 'reset', context)\n  });\n}\nexport function listReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case ListActionTypes.keyDown:\n      return handleKeyDown(action.key, state, context);\n    case ListActionTypes.itemClick:\n      return handleItemSelection(action.item, state, context);\n    case ListActionTypes.blur:\n      return handleBlur(state, context);\n    case ListActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, context);\n    case ListActionTypes.itemsChange:\n      return handleItemsChange(action.items, action.previousItems, state, context);\n    case ListActionTypes.resetHighlight:\n      return handleResetHighlight(state, context);\n    case ListActionTypes.highlightLast:\n      return handleHighlightLast(state, context);\n    case ListActionTypes.clearSelection:\n      return handleClearSelection(state, context);\n    default:\n      return state;\n  }\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nfunction areEqual(a, b) {\n  return a === b;\n}\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\n\n/**\n * Gets the current state augmented with controlled values from the outside.\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\n */\nfunction getControlledState(internalState, controlledProps) {\n  const augmentedState = _extends({}, internalState);\n  Object.keys(controlledProps).forEach(key => {\n    if (controlledProps[key] !== undefined) {\n      augmentedState[key] = controlledProps[key];\n    }\n  });\n  return augmentedState;\n}\n/**\n * Defines an effect that compares the next state with the previous state and calls\n * the `onStateChange` callback if the state has changed.\n * The comparison is done based on the `stateComparers` parameter.\n */\nfunction useStateChangeDetection(parameters) {\n  const {\n    nextState,\n    initialState,\n    stateComparers,\n    onStateChange,\n    controlledProps,\n    lastActionRef\n  } = parameters;\n  const internalPreviousStateRef = React.useRef(initialState);\n  React.useEffect(() => {\n    if (lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n    Object.keys(nextState).forEach(key => {\n      var _stateComparers$key;\n      // go through all state keys and compare them with the previous state\n      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;\n      const nextStateItem = nextState[key];\n      const previousStateItem = previousState[key];\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\n        var _event, _type;\n        onStateChange == null || onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : '', nextState);\n      }\n    });\n    internalPreviousStateRef.current = nextState;\n    lastActionRef.current = null;\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n}\n\n/**\n * The alternative to `React.useReducer` that lets you control the state from the outside.\n *\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\n * It also supports partially controlled state, when some state items are controlled and some are not.\n *\n * The controlled state items are provided via the `controlledProps` parameter.\n * When a reducer action is dispatched, the internal state is updated with the new values.\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\n * This event can be used to update the controlled values.\n *\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\n *\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\n * similarly to how React context is implicitly available to every component.\n *\n * @template State - The type of the state calculated by the reducer.\n * @template Action - The type of the actions that can be dispatched.\n * @template ActionContext - The type of the additional properties that will be added to every action object.\n *\n * @ignore - internal hook.\n */\nexport function useControllableReducer(parameters) {\n  const lastActionRef = React.useRef(null);\n  const {\n    reducer,\n    initialState,\n    controlledProps = EMPTY_OBJECT,\n    stateComparers = EMPTY_OBJECT,\n    onStateChange = NOOP,\n    actionContext,\n    componentName = ''\n  } = parameters;\n  const controlledPropsRef = React.useRef(controlledProps);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      Object.keys(controlledProps).forEach(key => {\n        if (controlledPropsRef.current[key] !== undefined && controlledProps[key] === undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing a controlled prop to be uncontrolled: ${key}`);\n        }\n        if (controlledPropsRef.current[key] === undefined && controlledProps[key] !== undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing an uncontrolled prop to be controlled: ${key}`);\n        }\n      });\n    }, [controlledProps, componentName]);\n  }\n\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\n  const reducerWithControlledState = React.useCallback((state, action) => {\n    lastActionRef.current = action;\n    const controlledState = getControlledState(state, controlledProps);\n    const newState = reducer(controlledState, action);\n    return newState;\n  }, [controlledProps, reducer]);\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\n\n  // The action that is passed to dispatch is augmented with the actionContext.\n  const dispatchWithContext = React.useCallback(action => {\n    dispatch(_extends({}, action, {\n      context: actionContext\n    }));\n  }, [actionContext]);\n  useStateChangeDetection({\n    nextState,\n    initialState,\n    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,\n    onStateChange: onStateChange != null ? onStateChange : NOOP,\n    controlledProps,\n    lastActionRef\n  });\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\n}","'use client';\n\nimport * as React from 'react';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\n/**\n * @ignore - internal hook.\n *\n * Provides a handler for text navigation.\n * It's used to navigate a list by typing the first letters of the options.\n *\n * @param callback A function to be called when the navigation should be performed.\n * @returns A function to be used in a keydown event handler.\n */\nexport function useTextNavigation(callback) {\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  return React.useCallback(event => {\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n      textCriteria.lastTime = currentTime;\n      callback(textCriteria.searchString, event);\n    }\n  }, [callback]);\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { ListActionTypes } from './listActions.types';\nimport { listReducer as defaultReducer } from './listReducer';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { areArraysEqual } from '../utils/areArraysEqual';\nimport { useTextNavigation } from '../utils/useTextNavigation';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\nconst defaultItemComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsItemDisabled = () => false;\nconst defaultItemStringifier = item => typeof item === 'string' ? item : String(item);\nconst defaultGetInitialState = () => ({\n  highlightedValue: null,\n  selectedValues: []\n});\n\n/**\n * The useList is a lower-level utility that is used to build list-like components.\n * It's used to manage the state of the list and its items.\n *\n * Supports highlighting a single item and selecting an arbitrary number of items.\n *\n * The state of the list is managed by a controllable reducer - that is a reducer that can have its state\n * controlled from outside.\n *\n * By default, the state consists of `selectedValues` and `highlightedValue` but can be extended by the caller of the hook.\n * Also the actions that can be dispatched and the reducer function can be defined externally.\n *\n * @template ItemValue The type of the item values.\n * @template State The type of the list state. This should be a subtype of `ListState<ItemValue>`.\n * @template CustomAction The type of the actions that can be dispatched (besides the standard ListAction).\n * @template CustomActionContext The shape of additional properties that will be added to actions when dispatched.\n *\n * @ignore - internal hook.\n */\nfunction useList(params) {\n  const {\n    controlledProps = EMPTY_OBJECT,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    getInitialState = defaultGetInitialState,\n    getItemDomElement,\n    getItemId,\n    isItemDisabled = defaultIsItemDisabled,\n    rootRef: externalListRef,\n    onStateChange = NOOP,\n    items,\n    itemComparer = defaultItemComparer,\n    getItemAsString = defaultItemStringifier,\n    onChange,\n    onHighlightChange,\n    onItemsChange,\n    orientation = 'vertical',\n    pageSize = 5,\n    reducerActionContext = EMPTY_OBJECT,\n    selectionMode = 'single',\n    stateReducer: externalReducer,\n    componentName = 'useList'\n  } = params;\n  if (process.env.NODE_ENV !== 'production') {\n    if (focusManagement === 'DOM' && getItemDomElement == null) {\n      throw new Error('useList: The `getItemDomElement` prop is required when using the `DOM` focus management.');\n    }\n    if (focusManagement === 'activeDescendant' && getItemId == null) {\n      throw new Error('useList: The `getItemId` prop is required when using the `activeDescendant` focus management.');\n    }\n  }\n  const listRef = React.useRef(null);\n  const handleRef = useForkRef(externalListRef, listRef);\n  const handleHighlightChange = React.useCallback((event, value, reason) => {\n    onHighlightChange == null || onHighlightChange(event, value, reason);\n    if (focusManagement === 'DOM' && value != null && (reason === ListActionTypes.itemClick || reason === ListActionTypes.keyDown || reason === ListActionTypes.textNavigation)) {\n      var _getItemDomElement;\n      getItemDomElement == null || (_getItemDomElement = getItemDomElement(value)) == null || _getItemDomElement.focus();\n    }\n  }, [getItemDomElement, onHighlightChange, focusManagement]);\n  const stateComparers = React.useMemo(() => ({\n    highlightedValue: itemComparer,\n    selectedValues: (valuesArray1, valuesArray2) => areArraysEqual(valuesArray1, valuesArray2, itemComparer)\n  }), [itemComparer]);\n\n  // This gets called whenever a reducer changes the state.\n  const handleStateChange = React.useCallback((event, field, value, reason, state) => {\n    onStateChange == null || onStateChange(event, field, value, reason, state);\n    switch (field) {\n      case 'highlightedValue':\n        handleHighlightChange(event, value, reason);\n        break;\n      case 'selectedValues':\n        onChange == null || onChange(event, value, reason);\n        break;\n      default:\n        break;\n    }\n  }, [handleHighlightChange, onChange, onStateChange]);\n\n  // The following object is added to each action when it's dispatched.\n  // It's accessible in the reducer via the `action.context` field.\n  const listActionContext = React.useMemo(() => {\n    return {\n      disabledItemsFocusable,\n      disableListWrap,\n      focusManagement,\n      isItemDisabled,\n      itemComparer,\n      items,\n      getItemAsString,\n      onHighlightChange: handleHighlightChange,\n      orientation,\n      pageSize,\n      selectionMode,\n      stateComparers\n    };\n  }, [disabledItemsFocusable, disableListWrap, focusManagement, isItemDisabled, itemComparer, items, getItemAsString, handleHighlightChange, orientation, pageSize, selectionMode, stateComparers]);\n  const initialState = getInitialState();\n  const reducer = externalReducer != null ? externalReducer : defaultReducer;\n  const actionContext = React.useMemo(() => _extends({}, reducerActionContext, listActionContext), [reducerActionContext, listActionContext]);\n  const [state, dispatch] = useControllableReducer({\n    reducer,\n    actionContext,\n    initialState: initialState,\n    controlledProps,\n    stateComparers,\n    onStateChange: handleStateChange,\n    componentName\n  });\n  const {\n    highlightedValue,\n    selectedValues\n  } = state;\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ListActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  const previousItems = React.useRef([]);\n  React.useEffect(() => {\n    // Whenever the `items` object changes, we need to determine if the actual items changed.\n    // If they did, we need to dispatch an `itemsChange` action, so the selected/highlighted state is updated.\n    if (areArraysEqual(previousItems.current, items, itemComparer)) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemsChange,\n      event: null,\n      items,\n      previousItems: previousItems.current\n    });\n    previousItems.current = items;\n    onItemsChange == null || onItemsChange(items);\n  }, [items, itemComparer, dispatch, onItemsChange]);\n  const createHandleKeyDown = externalHandlers => event => {\n    var _externalHandlers$onK;\n    (_externalHandlers$onK = externalHandlers.onKeyDown) == null || _externalHandlers$onK.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['Home', 'End', 'PageUp', 'PageDown'];\n    if (orientation === 'vertical') {\n      keysToPreventDefault.push('ArrowUp', 'ArrowDown');\n    } else {\n      keysToPreventDefault.push('ArrowLeft', 'ArrowRight');\n    }\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the list handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ListActionTypes.keyDown,\n      key: event.key,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = externalHandlers => event => {\n    var _externalHandlers$onB, _listRef$current;\n    (_externalHandlers$onB = externalHandlers.onBlur) == null || _externalHandlers$onB.call(externalHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_listRef$current = listRef.current) != null && _listRef$current.contains(event.relatedTarget)) {\n      // focus remains within the list\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? getItemId(highlightedValue) : undefined,\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    });\n  };\n  const getItemState = React.useCallback(item => {\n    const selected = (selectedValues != null ? selectedValues : []).some(value => value != null && itemComparer(item, value));\n    const highlighted = highlightedValue != null && itemComparer(item, highlightedValue);\n    const focusable = focusManagement === 'DOM';\n    return {\n      focusable,\n      highlighted,\n      selected\n    };\n  }, [itemComparer, selectedValues, highlightedValue, focusManagement]);\n  const contextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState\n  }), [dispatch, getItemState]);\n  React.useDebugValue({\n    state\n  });\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    rootRef: handleRef,\n    state\n  };\n}\nexport { useList };","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It handles the item's mouse events and tab index.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item\n  } = parameters;\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    selected\n  };\n}","export function areArraysEqual(array1, array2, itemComparer = (a, b) => a === b) {\n  return array1.length === array2.length && array1.every((value, index) => itemComparer(value, array2[index]));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * Combines the two get*Props functions from Base UI hooks into one.\n * Useful when a hook uses two other hooks behind the scenes\n * (such as useSelect that depends on useList and useButton for its root slot).\n *\n * The resulting function will return the combined props.\n * They are merged from left to right, similarly to how Object.assign works.\n *\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\n * so its event handlers can call the previous handlers and act depending on its result.\n *\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\n */\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\n  return function getCombinedProps(external = {}) {\n    const firstResult = _extends({}, external, getFirstProps(external));\n    const result = _extends({}, firstResult, getSecondProps(firstResult));\n    return result;\n  };\n}","import * as React from 'react';\n\n/**\n * @internal\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nexport default FormControlContext;"],"names":["useCompoundItem","id","itemMetadata","context","Error","registerItem","registeredId","setRegisteredId","undefined","returnedId","deregister","index","getItemIndex","totalItemCount","totalSubitemCount","CompoundComponentContext","useCompoundParent","subitems","setSubitems","Map","subitemKeys","Set","deregisterItem","current","delete","previousState","newState","item","providedOrGeneratedId","add","set","sortedSubitems","subitemsArray","Array","from","keys","map","key","subitem","get","sort","a","b","aNode","ref","bNode","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","sortSubitems","indexOf","contextValue","size","displayName","ListContext","ListActionTypes","blur","focus","itemClick","itemHover","itemsChange","keyDown","resetHighlight","highlightLast","textNavigation","clearSelection","moveHighlight","previouslyHighlightedValue","offset","_items$nextIndex","items","isItemDisabled","disableListWrap","disabledItemsFocusable","itemComparer","focusManagement","defaultHighlightedIndex","maxIndex","length","previouslyHighlightedIndex","findIndex","nextIndexCandidate","lookupDirection","wrapAround","newIndex","Math","abs","nextIndex","currentIndex","includeDisabledItems","every","itemIndex","nextFocus","findValidItemToHighlight","handleItemSelection","state","selectionMode","selectedValues","i","newSelectedValues","some","sv","filter","toggleSelection","highlightedValue","textCriteriaMatches","searchString","stringifyItem","_stringifyItem","text","trim","toLowerCase","listReducer","action","type","previouslySelectedValue","orientation","pageSize","handleKeyDown","handleBlur","getItemAsString","startWithCurrentItem","nextItem","handleTextNavigation","previousItems","_state$selectedValues","newHighlightedValue","_items$find","find","selectedValue","handleItemsChange","handleResetHighlight","handleHighlightLast","handleClearSelection","areEqual","EMPTY_OBJECT","NOOP","getControlledState","internalState","controlledProps","augmentedState","Object","forEach","useControllableReducer","parameters","lastActionRef","reducer","initialState","stateComparers","onStateChange","actionContext","componentName","reducerWithControlledState","controlledState","nextState","dispatch","dispatchWithContext","internalPreviousStateRef","_stateComparers$key","stateComparer","nextStateItem","previousStateItem","_event","_type","event","useStateChangeDetection","TEXT_NAVIGATION_RESET_TIMEOUT","defaultItemComparer","optionA","optionB","defaultIsItemDisabled","defaultItemStringifier","String","defaultGetInitialState","useList","params","getInitialState","getItemDomElement","getItemId","rootRef","externalListRef","onChange","onHighlightChange","onItemsChange","reducerActionContext","stateReducer","externalReducer","listRef","handleRef","useForkRef","handleHighlightChange","value","reason","_getItemDomElement","valuesArray1","valuesArray2","areArraysEqual","handleStateChange","field","listActionContext","callback","textCriteriaRef","lastTime","textCriteria","lowerKey","currentTime","performance","now","useTextNavigation","createHandleKeyDown","externalHandlers","_externalHandlers$onK","onKeyDown","call","defaultMuiPrevented","keysToPreventDefault","push","includes","preventDefault","getItemState","selected","highlighted","focusable","getRootProps","externalProps","externalEventHandlers","extractEventHandlers","tabIndex","onBlur","_externalHandlers$onB","_listRef$current","contains","relatedTarget","useListItem","handlePointerOverEvents","listContext","createHandleClick","_externalHandlers$onC","onClick","defaultPrevented","createHandlePointerOver","_externalHandlers$onM","onMouseOver","onPointerOver","array1","array2","combineHooksSlotProps","getFirstProps","getSecondProps","external","firstResult","FormControlContext"],"sourceRoot":""}