{"version":3,"file":"component---src-pages-result-rom-tsx-74692bd9728bd1485e2a.js","mappings":"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","sources":["webpack://trs-80-model-1-debugging/./node_modules/@mui/base/Portal/Portal.js","webpack://trs-80-model-1-debugging/./src/components/index_rom/SearchPane.tsx","webpack://trs-80-model-1-debugging/./src/pages/result_rom.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport { Portal };","import * as React from \"react\";\n\nimport roms from \"../../roms\";\nimport Sheet from \"@mui/joy/Sheet\";\nimport Grid from \"@mui/joy/Grid\";\nimport Card from \"@mui/joy/Card\";\nimport Link from \"@mui/joy/Link\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Button from \"@mui/joy/Button\";\nimport Box from \"@mui/joy/Box\";\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\n\ntype PropsType = {\n  onClick?: (event: { data: number[]; index: number }) => void;\n};\n\nconst SearchPane: React.FC<PropsType> = (props) => {\n  const pageSize = 1;\n  const [page, setPage] = React.useState(0);\n\n  const onClick = props.onClick;\n\n  const currentIndex = pageSize * page;\n\n  const elements = roms.slice(currentIndex, currentIndex + pageSize).map((item, idx) => {\n    const { title, system, source, notes, data } = item;\n    return (\n      <Sheet key={idx} variant=\"outlined\" sx={{ p: 4 }}>\n        <Grid container spacing={2} sx={{ flexGrow: 1 }} pb=\"1.5rem\">\n          <Card sx={{ margin: \"auto\", marginBottom: \"1rem\" }}>\n            <Typography variant=\"h3\"> {title} </Typography>\n            <Divider />\n            <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n              <Grid xs={4}>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\n                    System\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n                    {system}\n                  </Typography>\n                </CardContent>\n              </Grid>\n\n              <Grid xs={4}>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\n                    Bytes\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n                    {data.length}\n                  </Typography>\n                </CardContent>\n              </Grid>\n\n              <Grid xs={4}>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\n                    Source\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n                    <Link href={source}>{source}</Link>\n                  </Typography>\n                </CardContent>\n              </Grid>\n\n              <Grid xs={10}>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\n                    Notes\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n                    {notes}\n                  </Typography>\n                </CardContent>\n              </Grid>\n              <Grid xs={2}>\n                <Button\n                  loading={false}\n                  onClick={() => {\n                    onClick && onClick({ data, index: currentIndex });\n                  }}\n                  variant=\"solid\"\n                >\n                  Insert\n                </Button>\n              </Grid>\n            </Grid>\n          </Card>\n        </Grid>\n      </Sheet>\n    );\n  });\n\n  return (\n    <>\n      <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n        <Box m=\"auto\" pb=\"2rem\">\n          <Button\n            loading={false}\n            onClick={() => {\n              setPage(Math.max(0, page - 1));\n            }}\n            variant=\"solid\"\n            disabled={page === 0}\n          >\n            <ArrowCircleLeftIcon />\n          </Button>\n          ({page + 1} of {Math.ceil(roms.length / pageSize)})\n          <Button\n            loading={false}\n            onClick={() => {\n              setPage(page + 1);\n            }}\n            variant=\"solid\"\n            disabled={page === Math.floor(roms.length / pageSize)}\n          >\n            <ArrowCircleRightIcon />\n          </Button>\n          <Button\n            loading={false}\n            onClick={() => {\n              setPage(page + 10);\n            }}\n            variant=\"solid\"\n            disabled={page === Math.floor(roms.length / pageSize)}\n          >\n            <ArrowCircleRightIcon />\n            +10\n          </Button>\n        </Box>\n      </Grid>\n      {elements}\n    </>\n  );\n};\n\nexport default SearchPane;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\nimport Sheet from \"@mui/joy/Sheet\";\nimport Grid from \"@mui/joy/Grid\";\nimport Button from \"@mui/joy/Button\";\nimport Box from \"@mui/joy/Box\";\n\nimport SearchPane from \"../components/index_rom/SearchPane\";\n\nimport roms from \"../roms\";\nimport { downloadData } from \"../utils/binary\";\nimport Select from \"@mui/joy/Select\";\nimport Option from \"@mui/joy/Option\";\n\nconst ListPage: React.FC<PageProps> = () => {\n  const [selectedROMs, setSelectedROMs] = React.useState<number[]>([]);\n  const [selectedROMType, setSelectedROMType] = React.useState(\"trs80m1_2x_a_8\");\n\n  const [startByte, setStartByte] = React.useState(0);\n  const [byteLength, setByteLength] = React.useState(8192);\n\n  const romsEl = selectedROMs.map((selectedROM, idx) => {\n    const rom = roms[selectedROM];\n    return (\n      <Sheet key={idx} variant=\"outlined\" sx={{ p: 4 }}>\n        {rom.title} {rom.notes}\n        <Button\n          loading={false}\n          variant=\"solid\"\n          onClick={() => {\n            let newList = selectedROMs.slice(0);\n            newList.splice(idx, 1);\n            setSelectedROMs(newList);\n          }}\n        >\n          Delete\n        </Button>\n      </Sheet>\n    );\n  });\n\n  const inverse = () => {\n    setSelectedROMs(selectedROMs.slice(0).reverse());\n  };\n  const bitFlip = () => {\n    const maxBits = Math.ceil(Math.log(selectedROMs.length) / Math.log(2));\n    const flipBits = (num: number) => {\n      let rev = 0;\n      for (let i = 0; i < maxBits; i++) {\n        rev = (rev << 1) | (num & 1);\n        num = num >> 1;\n      }\n      return rev;\n    };\n    const newSelectedROMs = selectedROMs\n      .map((_v, idx) => {\n        const index = flipBits(idx);\n        return selectedROMs[index];\n      })\n      .filter((val) => val != null);\n    setSelectedROMs(newSelectedROMs);\n  };\n\n  const download = () => {\n    const data = selectedROMs.reduce<number[]>((acc, idx) => {\n      const rom = roms[idx];\n      const start = startByte;\n      const length = byteLength;\n      const byteArray = rom.data;\n      for (let i = start; i < start + length; i++) {\n        if (i >= byteArray.length) {\n          acc.push(0);\n        } else {\n          acc.push(byteArray[i]);\n        }\n      }\n      return acc;\n    }, []);\n    downloadData(new Uint8Array(data), \"rom.bin\");\n  };\n\n  return (\n    <>\n      <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n        <Grid xs={6}>\n          <SearchPane\n            onClick={(event) => {\n              const list = selectedROMs.concat([event.index]);\n              setSelectedROMs(list);\n            }}\n          />\n        </Grid>\n        <Grid xs={6}>\n          <Sheet variant=\"outlined\" sx={{ p: 4 }}>\n            <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n              Start: {startByte} Length: {byteLength}\n              <Select\n                value={selectedROMType}\n                onChange={(_event, value) => {\n                  if (value) setSelectedROMType(value);\n                  switch (value) {\n                    case \"trs80m1_2x_a_8\":\n                      setStartByte(0);\n                      setByteLength(8192);\n                      break;\n                    case \"trs80m1_2x_b_4\":\n                      setStartByte(8192);\n                      setByteLength(4096);\n                      break;\n                    case \"trs80m1_2x_b_8\":\n                      setStartByte(8192);\n                      setByteLength(8192);\n                      break;\n                    case \"trs80m1_3x_a_4\":\n                      setStartByte(0);\n                      setByteLength(4096);\n                      break;\n                    case \"trs80m1_3x_b_4\":\n                      setStartByte(4096);\n                      setByteLength(4096);\n                      break;\n                    case \"trs80m1_3x_c_4\":\n                      setStartByte(8192);\n                      setByteLength(4096);\n                      break;\n                  }\n                }}\n              >\n                <Option value=\"trs80m1_2x_a_8\">TRS-80 Model 1 2xROMs - ROM A (8k)</Option>\n                <Option value=\"trs80m1_2x_b_4\">TRS-80 Model 1 2xROMs - ROM B (4k)</Option>\n                <Option value=\"trs80m1_2x_b_8\">TRS-80 Model 1 2xROMs - ROM B (8k)</Option>\n                <Option value=\"trs80m1_3x_a_4\">TRS-80 Model 1 3xROMs - ROM A (4k)</Option>\n                <Option value=\"trs80m1_3x_b_4\">TRS-80 Model 1 3xROMs - ROM B (4k)</Option>\n                <Option value=\"trs80m1_3x_c_4\">TRS-80 Model 1 3xROMs - ROM C (4k)</Option>\n              </Select>\n            </Grid>\n\n            <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n              <Grid>{romsEl}</Grid>\n            </Grid>\n            <Grid container spacing={2} sx={{ flexGrow: 1 }}>\n              <Grid xs={3}>\n                <Button loading={false} onClick={inverse} variant=\"solid\">\n                  Inverse\n                </Button>\n              </Grid>\n              <Grid xs={3}>\n                <Button loading={false} onClick={bitFlip} variant=\"solid\">\n                  Bit-Flip\n                </Button>\n              </Grid>\n              <Grid xs={6}>\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                  <Button loading={false} onClick={download} variant=\"solid\">\n                    Download Binary\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Sheet>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListPage;\n\nexport const Head: HeadFC = () => <title>ROM List</title>;\n"],"names":["Portal","props","forwardedRef","children","container","disablePortal","mountNode","setMountNode","handleRef","ref","getContainer","document","body","newProps","page","setPage","React","onClick","currentIndex","elements","roms","slice","map","item","idx","title","system","source","notes","data","___EmotionJSX","Sheet","key","variant","sx","p","Grid","spacing","flexGrow","pb","Card","margin","marginBottom","Typography","Divider","xs","CardContent","fontSize","color","component","fontWeight","length","Link","href","Button","loading","index","Box","m","Math","max","disabled","ArrowCircleLeftIcon","ceil","floor","ArrowCircleRightIcon","selectedROMs","setSelectedROMs","selectedROMType","setSelectedROMType","startByte","setStartByte","byteLength","setByteLength","romsEl","selectedROM","rom","newList","splice","SearchPane","event","list","concat","Select","value","onChange","_event","Option","reverse","maxBits","log","newSelectedROMs","_v","num","rev","i","flipBits","filter","val","display","justifyContent","reduce","acc","start","byteArray","push","downloadData","Uint8Array","Head"],"sourceRoot":""}